#ifndef __MISC_QUEUE__
#define __MISC_QUEUE__

#include <misc\list.h>

/////////////////////////////////////////////////////////////////////////////////////////////
///Очередь
/////////////////////////////////////////////////////////////////////////////////////////////
template <class T> class   Queue: protected List<T>
{
  public:
                Queue (Pool* pool = Memory::M_GetPool ()): List<T> (pool) {}

/////////////////////////////////////////////////////////////////////////////////////////////
///Добавление / удаление
/////////////////////////////////////////////////////////////////////////////////////////////  
        bool    push  (const T& x,bool exc = false) throw (ExcNoMemory&) { return List<T>::insert (x,exc); }
        T       pop   (bool exc = false) throw (ExcEmpty&);
        bool    pop   (T&);
};

#include <misc\queue.inl>

#endif